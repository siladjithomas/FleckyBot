// <auto-generated />
using Database.DatabaseContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bot.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Database.Models.Guild", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildAdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuildAdminName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Database.Models.GuildRolesChannel", b =>
                {
                    b.Property<ulong>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChannelId");

                    b.ToTable("GuildRolesChannels");
                });

            modelBuilder.Entity("Database.Models.GuildSystemMessagesChannel", b =>
                {
                    b.Property<ulong>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChannelId");

                    b.ToTable("GuildSystemMessagesChannels");
                });

            modelBuilder.Entity("Database.Models.GuildTicketsChannel", b =>
                {
                    b.Property<ulong>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChannelId");

                    b.ToTable("GuildTicketsChannels");
                });

            modelBuilder.Entity("Database.Models.GuildTicketsGroup", b =>
                {
                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChannelId");

                    b.ToTable("GuildTicketsGroups");
                });

            modelBuilder.Entity("Database.Models.GuildVotesChannel", b =>
                {
                    b.Property<ulong>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChannelId");

                    b.ToTable("GuildVotesChannels");
                });

            modelBuilder.Entity("Database.Models.RequestableRole", b =>
                {
                    b.Property<ulong>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("RequestableRoles");
                });

            modelBuilder.Entity("Database.Models.Guild", b =>
                {
                    b.HasOne("Database.Models.GuildRolesChannel", "GuildRolesChannel")
                        .WithOne("Guild")
                        .HasForeignKey("Database.Models.Guild", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.GuildSystemMessagesChannel", "GuildSystemMessagesChannel")
                        .WithOne("Guild")
                        .HasForeignKey("Database.Models.Guild", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.GuildTicketsChannel", "GuildTicketsChannel")
                        .WithOne("Guild")
                        .HasForeignKey("Database.Models.Guild", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.GuildVotesChannel", "GuildVotesChannel")
                        .WithOne("Guild")
                        .HasForeignKey("Database.Models.Guild", "GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildRolesChannel");

                    b.Navigation("GuildSystemMessagesChannel");

                    b.Navigation("GuildTicketsChannel");

                    b.Navigation("GuildVotesChannel");
                });

            modelBuilder.Entity("Database.Models.GuildTicketsGroup", b =>
                {
                    b.HasOne("Database.Models.GuildTicketsChannel", "GuildTicketsChannel")
                        .WithMany("GuildTicketsGroups")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildTicketsChannel");
                });

            modelBuilder.Entity("Database.Models.GuildRolesChannel", b =>
                {
                    b.Navigation("Guild")
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Models.GuildSystemMessagesChannel", b =>
                {
                    b.Navigation("Guild")
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Models.GuildTicketsChannel", b =>
                {
                    b.Navigation("Guild")
                        .IsRequired();

                    b.Navigation("GuildTicketsGroups");
                });

            modelBuilder.Entity("Database.Models.GuildVotesChannel", b =>
                {
                    b.Navigation("Guild")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
